mongo {
  host = "127.0.0.1"
  port = 27017
  dbName = lichess
  connectionsPerHost = 100
  autoConnectRetry = true
  connectTimeout = 15 seconds
  threadsAllowedToBlockForConnectionMultiplier = 500
}
mongodb {
  servers = ["localhost:27017"]
  db = "lichess"
}
net {
  domain = "lichess.org"
  protocol = "http://"
  base_url = ${net.protocol}${net.domain}
}
core {
  cron.enabled = true
  collection.cache = cache
  renderer.name = "renderer"
}
cli {
  username = "thibault"
}
ws { # as in "web service", it's play http client
  timeout = 10 minutes # computer analysis can take a long time!
  useragent = ${net.base_url}
}
hub {
  sockets {
    timeout = 5 seconds
    name = sockets
  }
  lobby.name = ${lobby.hub.name}
  renderer.name = ${core.renderer.name}
}
search {
  es {
    host = localhost
    port = 9300
    cluster = elasticsearch
  }
}
team {
  collection.team = team
  collection.member = team_member
  collection.request = team_request
  paginator.max_per_page = 15
  paginator.max_user_per_page = 30
}
bookmark {
  collection.bookmark = bookmark
  paginator.max_per_page = ${game.paginator.max_per_page}
}
analyse {
  collection.analysis = analysis
}
security {
  collection.security = security
  wiretap.ips = []
  flood.duration = 60 seconds
  firewall {
    enabled=true
    cookie {
      enabled = false
      name=fEKHA4zI24ZrZrom
    }
    collection.firewall = firewall
  }
}
modlog {
  collection.modlog = modlog
}
i18n {
  web_path.relative = "public/trans"
  file_path.relative = "conf"
  upstream.url = "http://en.lichess.org"
  hide_calls.cookie.name="hide_i18n_calls"
  hide_calls.cookie.max_age=604800 # one week
  collection.translation = translation
  request_handler.protocol = ${net.protocol}
}
monitor {
  timeout = 1 second
}
lobby {
  message.max = 24
  message.lifetime = 30 seconds
  uid.timeout = 10 seconds
  collection {
    hook = hook
    message = lobby_room
  }
  hub.name = lobby
}
timeline {
  collection.entry = lobby_entry
  display_max = 10
}
game {
  cached.nb.ttl = 1 hour
  paginator.max_per_page = 8
  collection.game = game4
  collection.pgn = pgn
  js_path.raw = "public/javascripts/big.js"
  js_path.compiled = "public/compiled/big.js"
}
searchGame {
  index = ${search.index}
  type = game
  paginator.max_per_page = ${game.paginator.max_per_page}
}
round {
  message.lifetime = 30 seconds
  uid.timeout = 10 seconds
  hub.timeout = 2 minutes
  player.timeout = 1 minutes
  animation.delay = 200 ms
  moretime = 15 seconds
  collection {
    room = room
    watcher_room = watcher_room
  }
}
tournament {
  collection.tournament = tournament
  collection.room = tournament_room
  message.lifetime = 30 seconds
  uid.timeout = 5 seconds # small to avoid missed events
  hub.timeout = 2 minutes
  memo.ttl = 2 seconds
}
analyse {
  cached.nb.ttl = 10 minutes
}
forum {
  topic.max_per_page = 10
  post.max_per_page = 10
  search.max_per_page = 10
  recent.timeout = 30 minutes
  collection {
    categ = f_categ
    topic = f_topic
    post = f_post
  }
}
message {
  thread.max_per_page = 30
  collection.thread = m_thread
}
setup {
  friend_config.memo.ttl = 1 day
}
site {
  uid.timeout = 10 seconds
}
user {
  paginator.max_per_page = 40
  elo_updater.floor = 800
  cached.nb.ttl = 10 minutes
  online.ttl = 7 seconds
  collection {
    user = user2
    history = history
    config = config
  }
}
anon {
  collection.config = config_anon
}
memo {
  hook.timeout = 5 seconds
  finisher_lock.timeout = 20 seconds
}
ai {
  use = stockfish 
  server = false
  client = true
  stockfish {
    exec_path = "/usr/bin/stockfish"
    hash_size = 1024
    threads = 8
    debug = false
    play {
      movetime = 400
      url = "http://ai2.lichess.org/ai/stockfish/play"
    }
    analyse {
      movetime = 400
      url = "http://ai2.lichess.org/ai/stockfish/analyse"
    }
  }
}
application {
  langs="en,fr,ru,de,tr,sr,lv,bs,da,es,ro,it,fi,uk,pt,pl,nl,vi,sv,cs,sk,hu,ca,sl,az,nn,eo,tp,el,fp,lt,nb,et,hy,af,hi,ar,zh,gl,tk,hr,mk,id,ja,bg,th,fa,he,mr,mn,cy,gd,ga,sq,be,ka,sw,ps,is,kk,io,gu,fo,eu,bn,id,la"
  secret="CiebwjgIM9cHQ;I?Xk:sfqDJ;BhIe:jsL?r=?IPF[saf>s^r0]?0grUq4>q?5mP^"
}
session {
  cookieName="lila"
  maxAge=31536000
}
wiki {
  collection.page = wiki
  git.url = "git://github.com/ornicar/lichess.wiki.git"
}

# trust proxy X-Forwarded-For header
trustxforwarded=true

dbplugin = disabled
evolutionplugin = disabled
ehcacheplugin = disabled

logger {
  root=WARN
  play=WARN
  application=INFO
  org.elasticsearch=INFO
}

akka {
  loglevel = INFO
  stdout-loglevel = INFO
  log-config-on-start = off
  #event-handlers = ["lila.core.AkkaLogger"]
}
